#!/usr/bin/env zsh
fm() {
    local cwd_file
    cwd_file="$(mktemp -t "yazi-cwd.XXXXXX")"

    env yazi --cwd-file "$cwd_file" $@

    local cwd
    if cwd="$(command cat -- "$cwd_file")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
        builtin cd -- "$cwd"
    fi

    rm -f -- "$cwd_file"
}

least() {
    local command
    command=$(printf ' %q' "$@")
    (trap '' SIGINT; eval "${command}") | eval "${PAGER} -b -1 +F"
}

{{ if .machine.work -}}
clickhouse-client() {
    docker run -it --rm \
        --entrypoint clickhouse-client \
        --env TERM=xterm-256color \
        --volume "${HOME}/.clickhouse-client-history":/root/.clickhouse-client-history \
        clickhouse/clickhouse-server:24.3 --host host.docker.internal "$@"
}

ado-repos() {
    az devops project list --query 'value[].id' \
        | jq -r '.[]' \
        | xargs -rxn1 az repos list --query '[].{name: name, sshUrl: sshUrl, webUrl: webUrl}' -p \
        | jq -r '.[] | "\(.name): \(.webUrl) (remote: \(.sshUrl))"'
}

ssh-iap() {
    if [[ $# -lt 2 ]]; then
      echo >&2 'Usage: ssh-iap <gcp-project-id> <instance-name> [ssh-args]'
      return
    fi

    local gcp_project_id
    gcp_project_id="$1"
    shift

    local instance_name
    instance_name="$1"
    shift

    gcloud compute ssh --tunnel-through-iap --project="${gcp_project_id}" "${instance_name}" -- -oControlMaster=no -oSetEnv=TERM=xterm-256color "$@"
}
{{ end -}}
