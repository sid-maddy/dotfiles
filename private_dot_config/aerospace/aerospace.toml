# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work.
# Available commands:
# https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'.
# Available commands: https://nikitabobko.github.io/AeroSpace/commands

# Run Sketchybar together with AeroSpace.
# Sketchybar has built-in detection of already running process, so it won't be run twice on AeroSpace restart.
after-startup-command = ['exec-and-forget sketchybar']

# Notify Sketchybar about workspace change.
exec-on-workspace-change = [
  '/bin/bash',
  '-c',
  'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE PREV_WORKSPACE=$AEROSPACE_PREV_WORKSPACE',
]

# Start AeroSpace at login.
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers                         = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding.
# You can set 0 to disable the padding feature.
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes.
# Drop it from your config, if you don't like this behavior.
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = true

# Possible values: (qwerty|dvorak|colemak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See:
#                 https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 1
inner.vertical   = 1
outer.left       = 0
outer.bottom     = 0
outer.top        = [{monitor."built-in" = 5}, 38]
outer.right      = 0

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon,
#                   backtick, leftSquareBracket, rightSquareBracket, space, enter, esc,
#                   backspace, tab, pageUp, pageDown, home, end, forwardDelete,
#                   sectionSign (ISO keyboards only, european keyboards only)
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with cmd + ctrl + enter shortcut.
# (like in i3)
# cmd-ctrl-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''

# i3 wraps focus by default
cmd-ctrl-j         = 'exec-and-forget aerospace focus --boundaries-action fail left || aerospace workspace --wrap-around prev'
cmd-ctrl-k         = 'focus --boundaries-action fail down'
cmd-ctrl-l         = 'focus --boundaries-action fail up'
cmd-ctrl-semicolon = 'exec-and-forget aerospace focus --boundaries-action fail right || aerospace workspace --wrap-around next'

cmd-ctrl-shift-j         = 'move left'
cmd-ctrl-shift-k         = 'move down'
cmd-ctrl-shift-l         = 'move up'
cmd-ctrl-shift-semicolon = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
cmd-ctrl-s = 'layout v_accordion'               # 'layout stacking' in i3
cmd-ctrl-w = 'layout h_accordion'               # 'layout tabbed' in i3
cmd-ctrl-e = 'layout tiles horizontal vertical' # 'layout toggle split' in i3

cmd-ctrl-shift-space = 'layout floating tiling' # 'floating toggle' in i3

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
cmd-ctrl-1 = 'workspace 1'
cmd-ctrl-2 = 'workspace 2'
cmd-ctrl-3 = 'workspace 3'
cmd-ctrl-4 = 'workspace 4'
cmd-ctrl-5 = 'workspace 5'
cmd-ctrl-6 = 'workspace 6'
cmd-ctrl-7 = 'workspace 7'
cmd-ctrl-8 = 'workspace 8'
cmd-ctrl-9 = 'workspace 9'
cmd-ctrl-0 = 'workspace 10'

cmd-ctrl-tab       = 'workspace --wrap-around next'
cmd-ctrl-shift-tab = 'workspace --wrap-around prev'
cmd-ctrl-backtick  = 'workspace-back-and-forth'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
cmd-ctrl-shift-1 = 'move-node-to-workspace 1'
cmd-ctrl-shift-2 = 'move-node-to-workspace 2'
cmd-ctrl-shift-3 = 'move-node-to-workspace 3'
cmd-ctrl-shift-4 = 'move-node-to-workspace 4'
cmd-ctrl-shift-5 = 'move-node-to-workspace 5'
cmd-ctrl-shift-6 = 'move-node-to-workspace 6'
cmd-ctrl-shift-7 = 'move-node-to-workspace 7'
cmd-ctrl-shift-8 = 'move-node-to-workspace 8'
cmd-ctrl-shift-9 = 'move-node-to-workspace 9'
cmd-ctrl-shift-0 = 'move-node-to-workspace 10'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
cmd-ctrl-r = 'mode resize'

[mode.resize.binding]
enter = 'mode main'
esc   = 'mode main'
h     = 'resize width -50'
j     = 'resize height +50'
k     = 'resize height -50'
l     = 'resize width +50'

# Ghostty
[[on-window-detected]]
if.app-id = 'com.mitchellh.ghostty'
run       = 'move-node-to-workspace 1'

# Cursor
[[on-window-detected]]
if.app-id = 'com.todesktop.230313mzl4w4u92'
run       = 'move-node-to-workspace 1'

# Zed
[[on-window-detected]]
if.app-id = 'dev.zed.Zed'
run       = 'move-node-to-workspace 1'

# Zen
[[on-window-detected]]
if.app-id = 'app.zen-browser.zen'
run       = 'move-node-to-workspace 2'

# Notion
[[on-window-detected]]
if.app-id = 'notion.id'
run       = 'move-node-to-workspace 3'

# Notion Calendar
[[on-window-detected]]
if.app-id = 'com.cron.electron'
run       = 'move-node-to-workspace 3'

# Slack
[[on-window-detected]]
if.app-id = 'com.tinyspeck.slackmacgap'
run       = 'move-node-to-workspace 3'

# Thunderbird
[[on-window-detected]]
if.app-id = 'org.mozilla.thunderbird'
run       = 'move-node-to-workspace 3'

[[on-window-detected]]
if.app-id = 'org.mozilla.thunderbird-daily'
run       = 'move-node-to-workspace 3'

# Firefox
[[on-window-detected]]
if.app-id = 'org.mozilla.firefox'
run       = 'move-node-to-workspace 4'

[[on-window-detected]]
if.app-id = 'org.mozilla.nightly'
run       = 'move-node-to-workspace 4'

# Discord
[[on-window-detected]]
if.app-id = 'com.hnc.DiscordCanary'
run       = 'move-node-to-workspace 5'

[[on-window-detected]]
if.app-id = 'com.hnc.Discord'
run       = 'move-node-to-workspace 5'

# NoMachine
[[on-window-detected]]
if.app-id = 'com.nomachine.nxdock'
run       = 'move-node-to-workspace 10'

[workspace-to-monitor-force-assignment]
1 = 'main'      # Terminal & Code
2 = 'main'      # Main browser
3 = 'main'      # Main comms.
4 = 'secondary' # Secondary browser
5 = 'secondary' # Secondary comms.
